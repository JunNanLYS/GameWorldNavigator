from threading import Thread
from typing import Union

from cv2.typing import MatLike
from numpy import ndarray

from .core import Pos, Rect


def _get_screen_size(): ...


def _get_read_size(): ...


def _get_scaling() -> float: ...


class Game:
    screenshot: ndarray
    _game_class: Union[str, None]
    _game_name: str
    _hwnd: int
    def __init__(self, game_class: Union[str, None], game_name: str) -> None: ...

    @property
    def cls(self) -> str: ...

    @property
    def hwnd(self) -> int: ...

    @property
    def width(self) -> int: ...

    @property
    def height(self) -> int: ...

    @property
    def top_left(self) -> Pos: ...

    @property
    def scaling(self) -> float: ...

    @property
    def name(self) -> str: ...

    def set_foreground(self) -> None: ...

    def get_screenshot(self) -> ndarray: ...

    def get_rect(self) -> Rect: ...


class GameController:
    game: Game
    debug: bool
    filename: str
    def __init__(self, game_class: Union[str, None], game_name: str, debug=False, filename=""): ...

    def click_pos(self, pos: Pos) -> None: ...

    def click_image(self, *images: Union[str, ndarray, MatLike], **kwargs): ...

    def click_text(self, text: str, position: str = "center", **kwargs) -> None: ...

    def down_keyboard_time(self, key: str, stop_time: float, thread=False) -> Union[None, Thread]: ...

    def get_screenshot(self) -> ndarray: ...

    def image_debug(self, level="Debug") -> None: ...

    def press(self, key: str) -> None: ...

    def set_foreground(self) -> None: ...

    @property
    def screenshot(self) -> ndarray: ...

    def mouse_move_to(self, pos: Pos, duration: float) -> None: ...

    def mouse_press_and_move(self, start: Pos, end: Pos) -> None: ...

    def mouse_scroll(self, pos: Pos, scale: int, count: int, duration=0.0): ...

    def wait_image(self, *images: Union[str, ndarray, MatLike], **kwargs) -> None: ...

    def _click_pos(self, pos: Pos) -> None: ...

    def _click_image(self, *images: Union[str, ndarray, MatLike], **kwargs) -> None: ...

    def _click_text(self, text: str, position: str = "center", **kwargs) -> None: ...

    def _mouse_move_to(self, pos: Pos, duration: float) -> None: ...

    def _to_game_pos(self, pos: Pos) -> Pos: ...

    def _wait_image(self, *images: Union[str, ndarray, MatLike], **kwargs) -> None: ...

    def __image_filename(self, level: str) -> str: ...
